<!doctype html>
<html lang="en">
<head>
    <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
    <style>
        .map {
            height: 400px;
            width: 100%;
        }
    </style>
    <script src="https://openlayers.org/en/v4.6.5/build/ol.js" type="text/javascript"></script>
    <title>OpenLayers example</title>
</head>
<body>
    <h2>Choose Location</h2>
    <div id="map" class="map"></div>
    <script type="text/javascript">

	const markerSource = new ol.source.Vector();
	var markerStyle = new ol.style.Style({
	  image: new ol.style.Icon(({
			anchor: [0.5, 46],
			anchorXUnits: 'fraction',
			anchorYUnits: 'pixels',
			opacity: 0.75,
			src: 'https://openlayers.org/en/v4.6.4/examples/data/icon.png'
		  }))
		});
      var map = new ol.Map({
        target: 'map',
        layers: [
          new ol.layer.Tile({
                source: new ol.source.OSM()
          }),
		  new ol.layer.Vector({
			  source: markerSource,
			  style: markerStyle,
			}),
		],
        view: new ol.View({
          center: ol.proj.fromLonLat([19.83, 45.25]),
          zoom: 15
        })
      });

        function reverseGeocode(coords) {
            fetch('http://nominatim.openstreetmap.org/reverse?format=json&lon=' + coords[0] + '&lat=' + coords[1])
			 .then(function(response) {
					return response.json();
				}).then(function(json) {
                    let addressData = {
                        StreetName: json.address.road,
                        ZipCode: json.address.postcode,
                        Place: json.address.city + " " + json.address.house_number,
                        XCoordinate: json.lat,
                        YCoordinate: json.lon
                    }
                    $.post("/api/Driver/SetLocation", addressData)
                        .done(function () {
                            alert("Location added");
                        });
				});
		}


		function addMarker(lon, lat) {
		  var iconFeature = new ol.Feature({
			geometry: new ol.geom.Point(ol.proj.transform([lon, lat], 'EPSG:4326',
			  'EPSG:3857')),
			population: 4000,
			rainfall: 500
		  });

		  markerSource.addFeature(iconFeature);
		}
		function removeSelectedFeature() {
		   var features = markerSource.getFeatures();
			 if (features != null && features.length > 0) {
				 for (x in features) {
					var properties = features[x].getProperties();
					console.log(properties);
					var id = properties.id;
					markerSource.removeFeature(features[x]);
				  }
				}
			  }

		map.on('click', function(event) {
			var lonLat = ol.proj.toLonLat(event.coordinate);
			removeSelectedFeature();
			addMarker(lonLat[0], lonLat[1]);
			reverseGeocode(lonLat);
	});
    </script>
</body>
</html>